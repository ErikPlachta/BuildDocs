/**
 * @typedef {Object} Config
 * @summary Options used by `build-docs` to determine run behavior.
 * @description Config options used by `build-docs` to control the overall operations and behavior of the module. This includes the ability to enable/disable features, and set default values.
 * @prop {object} Logging - Options for logging behavior.
 * @prop {number} Output.level - Default `2`, error logging, this is the level of logging to output to file and/or console depending on config. (0 = none, 1 = fatal, 2 = error, 3 = warn, 4 = debug, 5 = info )
 * @prop {boolean} Output.toConsole - Default `true`, 
 * @prop {boolean} Output.toFile - Default `true`, 
 * @prop {string} Output.filePath - Default `./build/logs`, 
 * @prop {string} Output.fileNameCustom - Default `undefined` (no custom name), User has option to customize the name of the log file's preface.
 * @prop {string} Output.fileFormat - Default `json`, 
 * @prop {string} Output.fileWriteMode - Default `overwrite`, 
 * @prop {object} DocsToJson: - Options for DocsToJson sub-module behavior.
 * @prop {string} DocsToJson.outputPath - Default `./build/`, where to output the generated docs raw JSON data.
 * @prop {string} DocsToJson.outputName - Default `docs`, the name of the file to output the generated docs raw JSON data.
 * @prop {string} DocsToJson.outputFormat - Default `json`, the format of the generated docs raw JSON data.
 * @prop {string} DocsToJson.targetPath - Default `./src`, the path to the root directory to generate docs for.
 * @prop {string[]} DocsToJson.targetPaths - Default `[]`, an array of paths to the root directories to generate docs for.
 * @prop {string[]} DocsToJson.ignorePaths - An array of paths to ignore when generating docs. Default `['node_modules', '.git', '.build', '.vscode', '.github', 'backup', 'backups', 'build', 'cache', 'caches', 'coverage', 'dump', 'dumps', 'dist', 'docs', 'log', 'logs', 'out', 'temp', 'tmp', 'next']`.
 * @prop {string[]} DocsToJson.ignoreFiles - An array of files to ignore when generating docs. Default `[]`.
 * @prop {string[]} DocsToJson.targetFiles - An array of files to generate docs for. Default `[]`.
 * @prop {object} DocsToUi - Options for JsonToUi sub-module behavior. 
 * 
 * 
 * 
 */
const config = {
  Logging: {
    level: 0,                                   // | 1 | 2 | 3 | 4 | 5 (0 = none, 1 = fatal, 2 = error, 3 = warn, 4 = debug, 5 = info )
    toConsole: true,                            // true | false
    toFile: true,                               // true | false
    filePath: './build/build-docs/logs',        // string
    fileNameCustom: undefined,                  // undefined | string
    fileNameIncludeDate: true,                  // true | false
    fileNameIncludeTime: true,                  // true | false
    fileNameIncludeRoot: true,                  // true | false
    fileFormat: 'json',                         // 'json' | 'txt'
    writeMode: 'new',                           // 'append' | 'new' | 'overwrite' | 'prepend'
  },
  Output: {
    outputPath: './build/',                     // string - ( Where to output the generated docs raw JSON data.)
    outputFolderName: 'docs',                   // string - ( Folder within path all build-docs content will be generated.)
  },
  Target: {
    targetPath: './src',                        // string - ( Where to look for docs.)
    targetPaths: [],                            // string[] - ( Where to look for docs. )
    ignorePaths: [                              // string[] - ( Paths to ignore when generating docs. )
      'node_modules', '.git', '.build', '.vscode', '.github', 'backup', 'backups', 'build', 'cache', 'caches', 'coverage', 'dump', 'dumps', 'dist', 'docs', 'log', 'logs', 'out', 'temp', 'tmp',
    ],
    ignoreFiles: [],                            // string[] - ( Files to ignore when generating docs. )
    targetFiles: [],                            // string[] - ( Files to generate docs for. )
  },
  DocsToJson: {
    outputName: 'docs',                         // string - ( Name of the file to output the generated docs raw JSON data.)
    outputFormat: 'json',                       // 'json' - ( Format of the generated docs raw JSON data.)
    writeMode: 'overwrite',                     // 'append' | 'new' | 'overwrite' | 'prepend' - ( Write mode to use when saving the raw generate doc values.)
  },
  DocsToUi: {
    customOutputPath: undefined,                // string - ( Where to output the generated docs raw JSON data.)
    outputName: 'docs',                         // string - ( Name of the file to output the generated docs raw JSON data.)
    buildHtml: true,                            // true | false - ( Build HTML from the generated docs raw JSON data.)
    buildMarkdown: false,                       // true | false - ( Build Markdown from the generated docs raw JSON data.)
    writeMode: 'overwrite',                     // 'append' | 'new' | 'overwrite' | 'prepend' - ( Write mode to use when saving the generated docs.)
  },
}

export default config
