import { Config } from '../types'

/**
 * @file default.ts
 * @path build-docs\lib\Config\default.ts
 * @summary Default configuration options for build-docs.
 * @version 0.1.6
 * @since 2021-07-14
 * @author Erik Plachta
 * @typedef {Type} Config
 * @prop {Type} logging - Logging configuration options.
 *
 * @memberof module:build-docs.Config
 * @summary Default configuration options for build-docs.
 * @description These defaults are used to populate the `build-docs.config`
 *  class object. These values are used to determine overall behavior of the
 *  `build-docs` module and all of it's sub-modules. Users can override these
 *  configuration options via CLI, or through a custom config file in the root,
 *  `.build-docs` | `.build-docs.js`.
 *
 * @changelog 2021-07-14 | Erik Plachta | docs: Create concept as json.
 * @changelog 2021-07-22 | Erik Plachta | docs: Converted to TS, defined types, and integrated into sub-module `Config`.
 * @changelog 2021-07-23 | Erik Plachta | docs: Add Comments. Simplified design.
 *
 */
export const config: Config = {
  DocsToJson: {
    title: 'DocsToJson',
    summary: 'Extract Documentation for target files types in target directory.',
    description: '',
    options: [
      {
        title: 'outputName',
        description: 'Output name to be used for build-docs.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Target Root Directory_comments',
            description: 'Document strings extracted from comments within target will have the name `docs`.',
            value: 'docs',
          },
        ],
      },
      {
        title: 'outputFormat',
        description: 'Output format to be used for build-docs.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'JSON',
            description: 'Save results in JSON format.',
            value: 'json',
          },
        ],
        supported: [
          {
            title: 'JSON',
            description: 'Save results in JSON format.',
            value: 'json',
          },
        ]
      },
      {
        title: 'writeMode',
        description: 'If a file already exists behavior, and option to make unique.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [ 
          {
            title: 'Overwrite',
            description: 'Opens file for overwrite. The file is created if it does not exist.',
            value: 'overwrite',
          }
        ],
        // "overwrite", "append", "prepend", "new"
        supported: [
          {
            title: 'Overwrite',
            description: 'Opens file for overwrite. The file is created if it does not exist.',
            value: 'overwrite',
          },
          {
            title: 'Append',
            description: 'Opens file for appending. The file is created if it does not exist.',
            value: 'append',
          },
          {
            title: 'Prepend',
            description: 'Opens file for prepending. The file is created if it does not exist.',
            value: 'prepend',
          },
          {
            title: 'New',
            description: 'Always builds a a new file with a unique id of date-time.',
            value: 'new',
          },
        ],
      },
    ],
  },
  DocsToUi: {
    title: 'DocsToUi',
    summary: 'Converting JSON data generated by BuildDocs module into markdown and/or HTML.',
    description: '',
    options: [
      {
        title: 'customOutputPath',
        description: 'Output options to be used build-docs. Default is the root of where it was executed from `.dist`.',
        type: 'string | undefined',
        required: false,
        enabled: false,
        value: null,
        default: [
          {
            title: 'Current Directory `/.dist`',
            description: 'The current directory where build-docs was executed from.',
            value: './.dist',
          },
        ],
      },
      {
        title: 'outputName',
        description: 'Output name to be used for build-docs.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Target Root Directory_comments',
            description: 'The name of the output file.',
            value: 'docs',
          },
        ],
      },
      {
        title: 'buildHtml',
        description: 'Output format to be used for build-docs.',
        type: 'boolean',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'true',
            description: 'Build extracted comments into HTML.',
            value: true,
          }
        ],
        supported:[
          {
            title: 'true',
            description: 'Build extracted comments into HTML.',
            value: true,
          },
          {
            title: 'false',
            description: 'Do not build extracted comments into HTML.',
            value: false,
          }
        ]
      },
      {
        title: 'buildMarkdown',
        description: 'Output format to be used for build-docs.',
        type: 'boolean',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'false',
            description: 'Do not build extracted comments into Markdown.',
            value: true,
          }
        ],
        supported:[
          {
            title: 'true',
            description: 'Build extracted comments into Markdown.',
            value: true,
          },
          {
            title: 'false',
            description: 'Do not build extracted comments into Markdown.',
            value: false,
          }
        ]
        
      },
      {
        title: 'writeMode',
        description: 'If a file already exists behavior, and option to make unique.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Overwrite',
            'description': 'Opens file for overwrite. The file is created if it does not exist.',
            value: 'overwrite',
          }
        ],
        // "overwrite", "append", "prepend", "new"  
        supported: [
          {
            title: 'Overwrite',
            description: 'Opens file for overwrite. The file is created if it does not exist.',
            value: 'overwrite',
          },
          {
            title: 'Append',
            description: 'Opens file for appending. The file is created if it does not exist.',
            value: 'append',
          },
          {
            title: 'Prepend',
            description: 'Opens file for prepending. The file is created if it does not exist.',
            value: 'prepend',
          },
          {
            title: 'New',
            description: 'Always builds a a new file with a unique id of date-time.',
            value: 'new',
          },
        ]
      }
    ],
  },
  Logging: {
    title: 'Logging',
    summary: 'How build-docs should handle logging, including output location and level.',
    description: 'How build-docs should handle logging, including output location and level.',
    options: [
      {
        title: 'level',
        description:
          'The level of logging to output to file and/or console depending on config. 0 = None, 1 = Fatal, 2 = Error, 3 = Warn, 4 = Debug, 5 = Info.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'error',
            description: 'Log all error, and fatal messages.',
            value: 2,
          },
        ],
        supported: [
          {
            title: 'Info',
            description: 'Log all info, debug, warn, error, and fatal messages.',
            value: 5,
          },
          {
            title: 'Debug',
            description: 'Log all debug, warn, error, and fatal messages.',
            value: 4,
          },
          {
            title: 'Warn',
            description: 'Log all warn, error, and fatal messages.',
            value: 3,
          },
          {
            title: 'Error',
            description: 'Log all error, and fatal messages.',
            value: 2,
          },
          {
            title: 'Fatal',
            description: 'Log only fatal messages.',
            value: 1,
          },
          {
            title: 'None',
            description: 'Log only fatal messages.',
            value: 0,
          },
        ],
        memberOf: 'build-docs',
        dependentOn: ['settings/logging/options/logToFile', 'settings/logging/options/logToConsole'],
      },
      {
        title: 'toConsole',
        description: 'Should build-docs print logging to console.',
        type: 'boolean',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Enabled',
            description: 'Enable logging to console.',
            value: true,
          },
        ],
        supported: [
          {
            title: 'Enabled',
            description: 'Enable logging to console.',
            value: true,
          },
          {
            title: 'Disabled',
            description: 'Disable logging to console.',
            value: false,
          },
        ],
        memberOf: 'build-docs',
        dependentOn: ['settings/logging/options/logLevel'],
      },
      {
        title: 'toFile',
        description: 'Enable or disable logging to a file.',
        type: 'boolean',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Enabled',
            description: 'Enable logging to a file.',
            value: true,
          },
        ],
        memberOf: 'build-docs',
      },
      {
        title: 'filePath',
        description: 'Where to write log file(s).',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Default',
            description: 'Save results in build-docs target output path `./build/docs/logs`.',
            value: './build/docs/logs',
          },
        ],
      },
      {
        title: 'fileNameCustom',
        description: 'Customize the name of the log file..',
        type: 'string',
        required: true,
        enabled: false,
        value: null,
        default: [
          {
            title: 'Default',
            description: 'The date and time the log file was created.',
            value: `build-docs_${new Date().toISOString}`,
          },
        ],
      },
      {
        title: 'fileFormat',
        description: 'Output format to be used for build-docs.',
        type: 'string[]',
        required: true,
        enabled: true,
        value: null,
        memberOf: 'build-docs',
        default: [
          {
            title: 'JSON',
            description: 'Save log file(s) in JSON format.',
            value: 'json',
          },
        ],
        // "json"
        supported: [
          {
            title: 'JSON',
            description: 'Save log file(s) in JSON format.',
            value: 'json',
          }
        ],
      },
      {
        title: 'fileWriteMode',
        description: 'If a file already exists behavior, and option to make unique.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Overwrite',
            description:
              'Opens file for overwrite and replaces all existing content. The file is created if it does not exist.',
            value: 'overwrite',
          },
        ],
        // "overwrite", "append", "prepend", "new"
        supported: [
          {
            title: 'Overwrite',
            description: 'Opens file for overwrite. The file is created if it does not exist.',
            value: 'overwrite',
          },
          {
            title: 'Append',
            description: 'Opens file for appending. The file is created if it does not exist.',
            value: 'append',
          },
          {
            title: 'Prepend',
            description: 'Opens file for prepending. The file is created if it does not exist.',
            value: 'prepend',
          },
          {
            title: 'New',
            description: 'Always builds a a new file with a unique id of date-time.',
            value: 'new',
          },
        ],
        reference: 'https://nodejs.dev/en/api/v20/fs/#file-system-flags',
      },
    ],
  },
  Output: {
    title: 'Output',
    summary: 'Config options build-docs output behavior.',
    description:
      'Options for where build-docs will generate the results, the filename, and what format to generate them in.',
    options: [
      {
        title: 'outputPath',
        description: 'Output options to be used build-docs. Default is the root of where it was executed from `.dist`.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Current Directory `./.build`',
            description: 'The current directory where build-docs was executed from.',
            value: './.build',
          },
        ],
      },
      {
        title: 'outputName',
        description: 'Output name to be used for build-docs.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'docs',
            description: 'The default folder name for all build-docs output.',
            value: 'docs',
          },
        ],
      },
    ]
  },
  Target: {
    title: 'Target',
    summary: 'Where to look and the type of files to should be looking for docs.',
    description:
      'Manage the location(s) to search within, location(s) to ignore, file types to look for, and file types to ignore.',
    options: [
      { // targetPath
        title: 'targetPath',
        description: 'The root directory to search for documentation within by build-docs.',
        type: 'string',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Current Directory',
            description: 'The current directory where build-docs was executed from.',
            value: './',
          },
        ],
        memberOf: 'build-docs.generateDocs',
      },
      { // targetPaths
        title: 'targetPaths',
        description: 'Optional Paths to be used for build-docs. (not yet built out)',
        type: 'string[]',
        required: false,
        enabled: false,
        value: null,
        default: [],
      },
      { // targetFileTypes
        title: 'targetFileTypes',
        description: 'The file types to extract build documentation from.',
        type: 'string[]',
        required: true,
        enabled: true,
        value: null,
        default: [
          {
            title: 'JavaScript',
            description: 'Look for docs within JavaScript files',
            value: 'js',
          },
          {
            title: 'TypeScript',
            description: 'Look for docs within TypeScript files',
            value: 'ts',
          },
        ],
        supported: [
          {
            title: 'JavaScript',
            description: 'Look for docs within JavaScript files',
            value: 'js',
          },
          {
            title: 'TypeScript',
            description: 'Look for docs within TypeScript files',
            value: 'ts',
          },
        ],
      },
      { // ignoreFiles
        title: 'ignoreFiles',
        description: 'Files to ignore when building documentation.',
        type: 'string[]',
        required: false,
        enabled: false,
        value: null,
        default: [],
      },
      { // targetFiles
        title: 'targetFiles',
        description: 'Array of specific files to target',
        type: 'string[]',
        required: false,
        enabled: false,
        value: null,
        default: [],
      },
      { // ignorePaths
        title: 'ignorePaths',
        description: 'Paths to ignore when building documentation.',
        type: 'string[]',
        required: false,
        enabled: true,
        value: null,
        default: [
          {
            title: 'Node Modules',
            description: 'Ignore node_modules directory',
            value: 'node_modules',
          },
          {
            title: 'Archive',
            description: 'Ignore _ARCHIVE directory anywhere within target root path.',
            value: '_ARCHIVE',
          },

          {
            title: 'Thunder Client',
            description: 'Ignore _thunder-client, a VS Code extension, directory.',
            value: '_thunder-client',
          },
          {
            title: 'VS Code',
            description: 'Ignore .vscode directory anywhere within target root path.',
            value: '.vscode',
          },
          {
            title: 'Build Docs',
            description: 'Ignore build-docs_v1 directory anywhere within target root path.',
            value: 'build-docs_v1',
          },
        ],
      },
    ],
  },
}

export default config
